{"version":3,"sources":["Land/Land.glb","Land/Land.js","LoadingSpinner/LoadingSpinner.js","Flower/Flower.js","App.js","index.js"],"names":["Box","props","args","color","Asset","url","gltf","useLoader","GLTFLoader","object","scene","Land","fallback","MODEL","LoadingSpinner","mesh","useRef","useFrame","current","rotation","x","y","ref","wireframe","SpinGroup","grp","App","camera","position","fov","pixelRatio","window","devicePixelRatio","attach","intensity","distance","decay","groundColor","angle","penumbra","ReactDOM","render","document","getElementById"],"mappings":"4OAAe,MAA0B,iCCKzC,SAASA,EAAIC,GACX,OACE,iDAAUA,GAAV,cACE,mCAAmBC,KAAM,CAAC,EAAE,EAAE,KAC9B,sCAAsBC,MAAQ,YAKpC,SAASC,EAAT,GAAuB,IAAPC,EAAM,EAANA,IACRC,EAAOC,YAAUC,IAAYH,GACnC,OAAO,2BAAWI,OAAQH,EAAKI,QAGlB,SAASC,EAAKV,GAC3B,OACE,cAAC,WAAD,CAAUW,SAAU,cAACZ,EAAD,IAApB,SACE,cAACI,EAAD,CAAOC,IAAKQ,MCnBH,SAASC,EAAeb,GACnC,IAAMc,EAAOC,mBAMb,OAJAC,aAAS,WACLF,EAAKG,QAAQC,SAASC,EAAKL,EAAKG,QAAQC,SAASE,GAAM,OAGnD,iDACApB,GADA,IAEJqB,IAAKP,EAFD,UAIJ,4CAA4Bb,KAAM,CAAC,EAAE,EAAE,KACvC,mCAAmBC,MAAO,UAAWoB,WAAW,QCVxD,SAASnB,EAAT,GAAuB,IAAPC,EAAM,EAANA,IACRC,EAAOC,YAAUC,IAAYH,GACnC,OAAO,2BAAWI,OAAQH,EAAKI,QAGlB,SAASC,IACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAACE,EAAD,IAApB,SACE,cAAC,EAAD,CAAOT,IAAK,kBCPlB,SAASmB,EAAUvB,GACf,IAAMwB,EAAMT,mBAIX,OAHDC,aAAS,WACLQ,EAAIP,QAAQC,SAASE,GAAK,QAG1B,kDACQpB,GADR,IAEIqB,IAAKG,EAFT,UAII,cAAC,EAAD,IACA,cAAC,EAAD,QAKG,SAASC,IACpB,OAAQ,eAAC,IAAD,CAAUC,OAAQ,CAACC,SAAU,CAAC,EAAE,GAAG,IAAKC,IAAK,IAAKC,WAAYC,OAAOC,iBAArE,UACJ,uBAAOC,OAAO,aAAa/B,KAAM,CAAC,WAClC,8BAAcC,MAAQ,QAAW+B,UAAW,KAC5C,4BAAYN,SAAU,CAAC,EAAE,EAAE,GAAIzB,MAAO,SAAUgC,SAAU,GAAIC,MAAO,EAAGF,UAAW,KACnF,iCAAiB/B,MAAO,SAAUkC,YAAa,OAAUH,UAAW,MACpE,2BAAW/B,MAAO,SAAU+B,UAAW,GAAKC,SAAU,EAAGG,MAAO,GAAKF,MAAO,EAAGG,SAAU,EAAGX,SAAU,CAAC,EAAG,GAAI,KAC9G,cAACJ,EAAD,OCxBRgB,IAASC,OAAO,cAACf,EAAD,IAASgB,SAASC,eAAe,W","file":"static/js/main.8293b533.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Land.46f3fd79.glb\";","import React, { Suspense } from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport MODEL from './Land.glb'\n\nfunction Box(props) {\n  return(\n    <mesh {...props}>\n      <boxBufferGeometry args={[2,2,2]}/>\n      <meshStandardMaterial color={ 'red' }/>\n    </mesh>\n  )\n}\n\nfunction Asset({url}) {\n  const gltf = useLoader(GLTFLoader, url)\n  return <primitive object={gltf.scene} />\n}\n\nexport default function Land(props) {\n  return(\n    <Suspense fallback={<Box />}>\n      <Asset url={MODEL} />\n    </Suspense>\n  )\n}","import React, {useRef} from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nexport default function LoadingSpinner(props) {\n    const mesh = useRef();\n\n    useFrame(()=>{\n        mesh.current.rotation.x  = mesh.current.rotation.y  += 0.01;\n    })\n\n    return (<mesh \n        {...props}\n        ref={mesh}\n        >\n        <dodecahedronBufferGeometry args={[1,1,1]} />\n        <meshBasicMaterial color={\"hotpink\"} wireframe={true} />\n    </mesh>)\n}","import React, { Suspense } from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\n\nfunction Asset({url}) {\n  const gltf = useLoader(GLTFLoader, url)\n  return <primitive object={gltf.scene} />\n}\n\nexport default function Land() {\n  return(\n    <Suspense fallback={<LoadingSpinner />}>\n      <Asset url={'flower.gltf'} />\n    </Suspense>\n  )\n}","import React, {useRef} from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport { VRCanvas } from '@react-three/xr'\nimport Land from './Land/Land'\nimport Flower from './Flower/Flower'\n\nfunction SpinGroup(props) {\n    const grp = useRef()\n    useFrame(()=>{\n        grp.current.rotation.y += 0.001;\n    })\n     return(\n        <group\n            {...props}\n            ref={grp}\n        >\n            <Land />\n            <Flower />\n        </group>\n    )\n}\n\nexport default function App() {\n    return (<VRCanvas camera={{position: [6,3,-10], fov: 50}} pixelRatio={window.devicePixelRatio}>\n        <color attach=\"background\" args={[0x7ec0ee]} />\n        <ambientLight color={ 0x404040 } intensity={0.3} />\n        <pointLight position={[0,4,5]} color={0xffffff} distance={10} decay={1} intensity={0.5} />\n        <hemisphereLight color={0xffffbb} groundColor={0x080820} intensity={0.33} />\n        <spotLight color={0xffffff} intensity={0.8} distance={7} angle={0.8} decay={1} penumbra={1} position={[5, 1, -2]} />\n        <SpinGroup />\n    </VRCanvas>)\n}","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}